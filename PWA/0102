Progressive Web Apps

순수 자바스크립트로 PWA 만들기

** PWA 필수 요소 **

1) 서비스 워커
2) 웹앱 매니페스트
3) HTTPS

** 주요 기능 (네이티브 앱과 같은 경험)

4) 푸시 알림
5) 홈 화면에 추가(A2HS, Add To Home Screen)
6) 웹 API

----------------------------------------------------------------------------------------

1. 서비스 워커

    : 웹 브라우저 내에 있음
    : 웹 페이지와 분리
    : 항상 실행되고 있는 백그라운드 프로그램
    : 캐시 관리

2. 웹앱 매니페스트

    : 앱 소개 정보
    : 앱 기본 설정
    : JSON 파일 형식 
    : A2HS(Add to Home Screen)

    "orientation" : "portrait:수직", "landscape:수평"

3. 보안을 강화한 'HTTPS'

    : 암호화와 인증을 거쳐 보안을 강화한 웹 통신 규약
    : 반응 속도가 http보다 빠름 (http://www.httpvshttps.com)
    : PWA는 로컬에서도 동작 가능


----------------------------------------------------------------------------------------


** 기본 정보 작성 **

name
    : 첫 화면(스플래시 스크린)에 출력될 이름
    : 옴니(다운로드)버튼에도 출력
    : 홈 화면 아이콘

    "name" : "Hello,PWA",

short_name
    : 주로 모바일에서 사용
    : 설치 배너에 출력

    "short_name" : "PWA",

description
    : 웹 크롤러(검색엔진)이 정보 가져갈 때 사용

    "description" : "Start for PWA"


----------------------------------------------------------------------------------------

** 시작 URL 설정 **

스코프(scope)
    : 매니페스트에 정의된 내용이 적용될 수 있는 파일들의 경로 범위를 지정
    : 웹앱이 어느 폴더에 있는지 지정
    : "." : 현재 폴더에 있는 모든 파일

    "scope" : ".",

start_url
    : 프로그램을 실행하면 시작될 URL을 루트 경로(./)로 설정
    : index.html 파일이 있는 폴더 지정

    "start_url" : "./",


----------------------------------------------------------------------------------------

** display : 화면 표시 방법 설정 **

fullscreen
    : 기기의 최대 화면
    : 운영체제가 fullscreen을 지원하지 않으면 standalone으로 적용

    "display" : "fullscreen",

standalone
    : 브라우저의 주소표시줄, 상태표시줄 제거하여 일반 앱처럼 표시
    : 가장 보편적으로 사용

minimal-ui
    : 상단에 주소 표시줄 추가
    : 운영체제가 minimal-ui를 지원하지 않으면 standalone으로 적용

browser
    : 웹 브라우저와 동일한 모습으로 실행


----------------------------------------------------------------------------------------

** orientation : 화면 실행 방향 설정 **

portrait 
    : 수직 방향

landscape
    : 수평 방향


----------------------------------------------------------------------------------------

** 테마와 배경 화면 색상 설정 **

theme_color
    : 폰화면에서 헤드 색상

background_color
    : 폰 전체 배경화면 색상


----------------------------------------------------------------------------------------

** 스플래시 스크린 설정 **

src 
    : 이미지의 절대 주소 또는 상대 주소

sizes
    : 이미지의 픽셀 크기

type
    : 이미지의 파일 유형


----------------------------------------------------------------------------------------

** 바로가기 설정 **

shortcuts
    : MS 제품군 OS 아래쪽 아이콘 > 마우스 오른쪽 > 메뉴들 중 상단 메뉴
        ex. 새창

    : name : 마우스 오른쪽 클릭 시 출력될 이름

    : short_name : 모바일에서 앱 설치 후 클릭했을 때 출력

    : index.html 실행 > 옴니버튼 > 다운로드 실행 > 운영체제 하단 설치된 파일에서 마우스 오른쪽
    > 이름에 작성된 내용과 아이콘 확인


----------------------------------------------------------------------------------------

* 메니페스트 작성
    - 보편적으로 사용되므로 주로 템플릿 사용하여 작성함


----------------------------------------------------------------------------------------

** 서비스워커 사이클

* 서비스워커 생애주기(Lifecycle)  : 이벤트의 한 종류

self.addEventListener('activate',pEvent => {
    console.log('서비스워커 동작 시작!');
});

self.addEventListener('fetch',pEvent => {
    console.log('데이터 요청(fetch)!');
});


* 서비스 워커의 주요 이벤트

install
    : 서비서워커가 처음 설치될 때 실행
    : 캐시 파일 저장

activate
    : 서비스워커 설치 완료 시 실행
    : 서비스워커의 업데이트 담당
    : 기존 캐시 제거

fetch
    : 서비스워커 실행 시 작업할 내용 작성
    : 브라우저가 서버에 HTTP 요청 시 오프라인 상태면 캐시 파일 읽기


* 서비스 워커 캐시 삭제

    : 개발자 도구 > Application > Storage > Clear site data


----------------------------------------------------------------------------------------

